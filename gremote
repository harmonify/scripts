#!/usr/bin/env python

import webbrowser
import subprocess
import sys


def main(args=None):
    try:
        if args[0].startswith('-'):
            switch(s=args[0])
        remote = "origin" if len(args) == 1 else args[1]
        url = subprocess.check_output(
            f"git remote get-url {remote}".split()).decode().strip(".git\n")
        print(url)
        webbrowser.open(url, new=0, autoraise=True)
    except subprocess.CalledProcessError:
        print("No remote found")
    except KeyboardInterrupt:
        print("\nAborted")
    except Exception as e:
        print(e)


def switch(s: str) -> None:
    """ Map the switch to the corresponding function and execute it. """
    # map switches to functions
    # if no function is found, print help
    switches = {
        "-h": help,
        "--help": help,
    }

    if s in switches:
        switches[s]()
    else:
        print(f"Unknown switch: {s}")
        help()


def help():
    print("""
===============================================
gremote - open git remote url in the browser
===============================================

    Usage:
        python gremote [options] [remote]

    Options:
        -h, --help
            Print this help message and exit.
    
    Description:
        This script opens the git remote url in a browser.
        If no remote is provided, the `origin` remote is used.

    Examples:
        python gremote
            Open the `origin` remote url.
        
        python gremote dev
            Open the `dev` remote url.
        
        python gremote -h
            Print this help message and exit.
""")


if __name__ == '__main__':
    # sys.argv[0] is the name of the script
    # sys.argv[1:] is the list of arguments
    main(sys.argv[1:])
